---

- name: install packages for php
  become: true
  apt: name="{{item}}" state=present
  with_items:
    - php
    - php-curl
    - php-gd
    - php-mbstring
    - php-mysql
    - php-xdebug
    - php-xml

- name: configure php.ini
  become: true
  ini_file:
    path: /etc/php/7.2/mods-available/xdebug.ini
    section: xdebug
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop:
    # Vdebug setup
    - { option: "xdebug.remote_enable", value: "on" }
    - { option: "xdebug.remote_handler", value: "dbgp" }
    - { option: "xdebug.remote_host", value: "localhost" }
    - { option: "xdebug.remote_port", value: "9000" }


# Composer setup
- name: check if Composer is installed
  command: which composer.phar
  register: composer_installed
  failed_when: false
  changed_when: false

- name: download Composer installer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/composer-installer.php
    mode: 0755
  when: composer_installed.rc == 1

- name: install Composer
  command: php /tmp/composer-installer.php --install-dir="{{ansible_env.HOME}}/bin"
  args:
    creates: "{{ansible_env.HOME}}/bin/composer.phar"

# phpctags setup
- name: clone phpctags
  git:
    repo: https://github.com/vim-php/phpctags
    dest: "{{ ansible_env.HOME }}/soft/phpctags"
    force: true

- name: install phpctags dependencies
  command: composer.phar install --working-dir="{{ansible_env.HOME}}/soft/phpctags"
  args:
    creates: "{{ansible_env.HOME}}/soft/phpctags/composer.lock"

- name: create phpctags symlink
  file:
    path: "{{ansible_env.HOME}}/bin/phpctags"
    src: "{{ansible_env.HOME}}/soft/phpctags/bin/phpctags"
    state: link
